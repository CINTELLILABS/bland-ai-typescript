/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index";
import * as BlandAI from "../../api/index";
import * as core from "../../core";
import { ResponseData } from "./ResponseData";
import { MethodEnum } from "./MethodEnum";

export const DynamicData: core.serialization.ObjectSchema<serializers.DynamicData.Raw, BlandAI.DynamicData> =
    core.serialization.object({
        url: core.serialization.string(),
        responseData: core.serialization.property("response_data", core.serialization.list(ResponseData)),
        method: MethodEnum.optional(),
        cache: core.serialization.boolean().optional(),
        headers: core.serialization.record(core.serialization.string(), core.serialization.string()).optional(),
        body: core.serialization.string().optional(),
    });

export declare namespace DynamicData {
    interface Raw {
        url: string;
        response_data: ResponseData.Raw[];
        method?: MethodEnum.Raw | null;
        cache?: boolean | null;
        headers?: Record<string, string> | null;
        body?: string | null;
    }
}
