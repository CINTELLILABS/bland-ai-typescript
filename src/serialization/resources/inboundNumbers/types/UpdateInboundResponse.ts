/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../index";
import * as BlandAI from "../../../../api/index";
import * as core from "../../../../core";

export const UpdateInboundResponse: core.serialization.ObjectSchema<
    serializers.UpdateInboundResponse.Raw,
    BlandAI.UpdateInboundResponse
> = core.serialization.object({
    status: core.serialization.string(),
    message: core.serialization.string(),
    updates: core.serialization.record(core.serialization.string(), core.serialization.unknown()).optional(),
    failedUpdates: core.serialization.property(
        "failed_updates",
        core.serialization.record(core.serialization.string(), core.serialization.string()).optional()
    ),
});

export declare namespace UpdateInboundResponse {
    interface Raw {
        status: string;
        message: string;
        updates?: Record<string, unknown> | null;
        failed_updates?: Record<string, string> | null;
    }
}
