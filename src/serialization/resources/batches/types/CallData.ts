/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../index";
import * as BlandAI from "../../../../api/index";
import * as core from "../../../../core";
import { AnsweredByEnum } from "../../calls/types/AnsweredByEnum";

export const CallData: core.serialization.ObjectSchema<serializers.CallData.Raw, BlandAI.CallData> =
    core.serialization.object({
        createdAt: core.serialization.property("created_at", core.serialization.date()),
        to: core.serialization.string(),
        from: core.serialization.string(),
        completed: core.serialization.boolean(),
        callId: core.serialization.property("call_id", core.serialization.string()),
        callLength: core.serialization.property("call_length", core.serialization.number()),
        answeredBy: core.serialization.property("answered_by", AnsweredByEnum.optional()),
    });

export declare namespace CallData {
    interface Raw {
        created_at: string;
        to: string;
        from: string;
        completed: boolean;
        call_id: string;
        call_length: number;
        answered_by?: AnsweredByEnum.Raw | null;
    }
}
