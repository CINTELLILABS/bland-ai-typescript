/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../index";
import * as BlandAI from "../../../../api/index";
import * as core from "../../../../core";
import { BatchCallData } from "./BatchCallData";
import { SendCall } from "../../../types/SendCall";

export const SendBatchRequest: core.serialization.ObjectSchema<
    serializers.SendBatchRequest.Raw,
    BlandAI.SendBatchRequest
> = core.serialization
    .object({
        basePrompt: core.serialization.property("base_prompt", core.serialization.string()),
        callData: core.serialization.property("call_data", core.serialization.list(BatchCallData)),
        label: core.serialization.string().optional(),
        campaignId: core.serialization.property("campaign_id", core.serialization.string().optional()),
        testMode: core.serialization.property("test_mode", core.serialization.boolean().optional()),
    })
    .extend(SendCall);

export declare namespace SendBatchRequest {
    interface Raw extends SendCall.Raw {
        base_prompt: string;
        call_data: BatchCallData.Raw[];
        label?: string | null;
        campaign_id?: string | null;
        test_mode?: boolean | null;
    }
}
