/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../index";
import * as BlandAI from "../../../../api/index";
import * as core from "../../../../core";

export const ListedCallData: core.serialization.ObjectSchema<serializers.ListedCallData.Raw, BlandAI.ListedCallData> =
    core.serialization.object({
        callId: core.serialization.property("call_id", core.serialization.string()),
        createdAt: core.serialization.date(),
        callLength: core.serialization.property("call_length", core.serialization.number()),
        to: core.serialization.string(),
        from: core.serialization.string(),
        completed: core.serialization.boolean(),
        queueStatus: core.serialization.property("queue_status", core.serialization.string()),
        errorMessage: core.serialization.property("error_message", core.serialization.string().optional()),
        answeredBy: core.serialization.property("answered_by", core.serialization.string()),
        batchId: core.serialization.property("batch_id", core.serialization.string().optional()),
    });

export declare namespace ListedCallData {
    interface Raw {
        call_id: string;
        createdAt: string;
        call_length: number;
        to: string;
        from: string;
        completed: boolean;
        queue_status: string;
        error_message?: string | null;
        answered_by: string;
        batch_id?: string | null;
    }
}
