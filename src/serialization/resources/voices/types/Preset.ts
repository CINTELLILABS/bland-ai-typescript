/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../index";
import * as BlandAI from "../../../../api/index";
import * as core from "../../../../core";

export const Preset: core.serialization.ObjectSchema<serializers.Preset.Raw, BlandAI.Preset> =
    core.serialization.object({
        voiceName: core.serialization.property("voice_name", core.serialization.string()),
        description: core.serialization.string(),
        reduceLatency: core.serialization.property("reduce_latency", core.serialization.boolean()),
        interruptionThreshold: core.serialization.property(
            "interruption_threshold",
            core.serialization.number().optional()
        ),
        language: core.serialization.string(),
        voiceSettings: core.serialization.property("voice_settings", core.serialization.unknown()),
        editable: core.serialization.boolean(),
        public: core.serialization.boolean(),
        voicePresetId: core.serialization.property("voice_preset_id", core.serialization.string()),
    });

export declare namespace Preset {
    interface Raw {
        voice_name: string;
        description: string;
        reduce_latency: boolean;
        interruption_threshold?: number | null;
        language: string;
        voice_settings?: unknown;
        editable: boolean;
        public: boolean;
        voice_preset_id: string;
    }
}
